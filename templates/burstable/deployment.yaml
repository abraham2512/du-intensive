apiVersion: apps/v1
kind: Deployment
metadata:
  name: du-workload-bu-{{ or .Replica 0 }}
  annotations:
    # Disable CPU balance with CRIO
    irq-load-balancing.crio.io: "disable"
    cpu-load-balancing.crio.io: "disable"
    cpu-quota.crio.io: "disable"
  labels:
    group: load
    svc: du-workload-bu-{{ or .Replica 0 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: du-workload-bu-{{ or .Replica 0 }}
  template:
    metadata:
      labels:
        group: load
        name: du-workload-bu-{{ or .Replica 0 }}
    spec:
      runtimeClassName: {{ or .runtimeClassName "performance-openshift-node-performance-profile" }}
      containers:
        - image: "{{ .Image }}"
          imagePullPolicy: Always
          name: du-workload-bu-{{ or .Replica 0 }}
          # Request and Limits must be identical for the Pod to be assigned to the QoS Guarantee
          resources:
            requests:
              cpu: {{ or .CPURequest "1000m" }}
              memory: {{ or .MemoryRequest "1024M" }}
            limits:
              cpu: {{ or .CPULimit (or .CPURequest "2000m") }}
              memory: {{ or .MemoryLimit (or .MemoryRequest "2048M") }}
          # securityContext:
          #   privileged: true
          env:
            {{ if eq .containerEnv  nil }}
            - name: stress_cpu
              value: {{ or .CPUStress "1" | quote}}
            - name: stress_vm
              value: {{ or .VMStress  "1" | quote}}
            - name: stress_vm-bytes
              value: {{ or .VMStessBytes "512M" | quote}}
            - name: stress_hdd
              value: {{ or .HDDStress "1" | quote}}
            - name: stress_hdd-bytes
              value: {{ or .HDDStressBytes "25000000.0" | quote }}
            {{ else }}
            {{ range $name, $value := .containerEnv }}
            - name: {{ $name}}
              value: {{ $value | quote }}
            {{ end }}
            {{ end }}
          volumeMounts:
            {{ range  $volume := .volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ or $volume.path ((list "/var/" ($volume.name | replace " " "" | replace "-" "" | replace "_" "")) | join "") }}
            {{ end }}
      dnsPolicy: Default
      terminationGracePeriodSeconds: 1
      # Add not-ready/unreachable tolerations for 15 minutes so that node
      # failure doesn't trigger pod deletion.
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 900
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 900
      volumes:
        {{ range  $volume := .volumes }}
        - name: {{ $volume.name }}
          {{ if eq $volume.type "configMap" }}
          configMap:
            name: {{ $volume.name }}
          {{ else if eq $volume.type "secret" }}
          secret:
            secretName: {{ $volume.name }}
          {{ else if eq $volume.type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ $volume.name }}
          {{ end }}
        {{ end }}